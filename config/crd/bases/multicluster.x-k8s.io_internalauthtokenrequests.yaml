---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: internalauthtokenrequests.multicluster.x-k8s.io
spec:
  group: multicluster.x-k8s.io
  names:
    categories:
    - cluster-inventory
    kind: InternalAuthTokenRequest
    listKind: InternalAuthTokenRequestList
    plural: internalauthtokenrequests
    shortNames:
    - iatr
    singular: internalauthtokenrequest
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InternalAuthTokenRequest is the internal representation of an
          AuthTokenRequest.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the desired state of the InternalAuthTokenRequest.
            properties:
              clusterRoles:
                description: |-
                  ClusterRoles is a list of cluster roles that should be bound to the service account.


                  If a cluster role in the list is not found, the system will attempt to create it;
                  otherwise, the system will bind the cluster role directly to the service account,
                  even if the policies specified in the cluster role object do not match with those
                  in the request.


                  This field is immutable after creation.
                items:
                  description: ClusterRole describes a set of permissions that should
                    be set under the cluster scope.
                  properties:
                    name:
                      description: Name is the name of the cluster role that should
                        be created.
                      type: string
                    rules:
                      description: Rules is a list of policies for the resources in
                        the cluster scope.
                      items:
                        description: |-
                          PolicyRule holds information that describes a policy rule, but does not contain information
                          about who the rule applies to or which namespace the rule applies to.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                              the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          nonResourceURLs:
                            description: |-
                              NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                              Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                              Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          resourceNames:
                            description: ResourceNames is an optional white list of
                              names that the rule applies to.  An empty set means
                              that everything is allowed.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          resources:
                            description: Resources is a list of resources this rule
                              applies to. '*' represents all resources.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          verbs:
                            description: Verbs is a list of Verbs that apply to ALL
                              the ResourceKinds contained in this rule. '*' represents
                              all verbs.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                        - verbs
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                  required:
                  - name
                  type: object
                maxItems: 20
                type: array
                x-kubernetes-list-type: atomic
                x-kubernetes-validations:
                - message: ClusterRoles is immutable
                  rule: self == oldSelf
              roles:
                description: |-
                  Roles is a list of roles that should be bound to the service account.


                  If a role in the list is not found, the system will attempt to create it;
                  otherwise, the system will bind the role directly to the service account, even if the policies
                  specified in the role object do not match with those in the request.


                  This field is immutable after creation.
                items:
                  description: Role defines a role that should be bound to the service
                    account.
                  properties:
                    name:
                      description: Name is the name of the role that should be created.
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace where the role is created.
                        The namespace will be created if it does not already exist.
                      type: string
                    rules:
                      description: Rules is a list of policies for the resources in
                        the specified namespace.
                      items:
                        description: |-
                          PolicyRule holds information that describes a policy rule, but does not contain information
                          about who the rule applies to or which namespace the rule applies to.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                              the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          nonResourceURLs:
                            description: |-
                              NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                              Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                              Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          resourceNames:
                            description: ResourceNames is an optional white list of
                              names that the rule applies to.  An empty set means
                              that everything is allowed.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          resources:
                            description: Resources is a list of resources this rule
                              applies to. '*' represents all resources.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          verbs:
                            description: Verbs is a list of Verbs that apply to ALL
                              the ResourceKinds contained in this rule. '*' represents
                              all verbs.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                        - verbs
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                  required:
                  - name
                  - namespace
                  type: object
                maxItems: 20
                type: array
                x-kubernetes-list-type: atomic
                x-kubernetes-validations:
                - message: Roles is immutable
                  rule: self == oldSelf
              serviceAccountName:
                description: |-
                  ServiceAccountName is the name of the service account on behalf of which the authentication
                  token is issued.


                  If the service account cannot be found in the cluster, the system will attempt to create it.
                  Otherwise, the system will request and retrieve a token for the service account directly,
                  even if the roles and/or cluster roles are not set up as they are expected in the request.


                  This field is immutable after creation.


                  For simplicity reasons, for now the API assumes that the token issuer (the multi-cluster
                  management platform) decides where the service account lives.
                maxLength: 63
                type: string
                x-kubernetes-validations:
                - message: ServiceAccountName is immutable
                  rule: self == oldSelf
              serviceAccountNamespace:
                description: |-
                  ServiceAccountNamespace is the namespace where the service account is created.


                  If left empty, it is up to the token issuer to decide where the service account lives.
                maxLength: 63
                type: string
                x-kubernetes-validations:
                - message: ServiceAccountNamespace is immutable
                  rule: self == oldSelf
              targetClusterProfile:
                description: |-
                  TargetClusterProfile is the cluster profile to which the authentication token is requested.


                  Note that the API group and kind of the object reference must be left empty.


                  This field is immutable after creation.
                properties:
                  apiGroup:
                    description: |-
                      APIGroup is the group for the resource being referenced.
                      If APIGroup is not specified, the specified Kind must be in the core API group.
                      For any other third-party types, APIGroup is required.
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                  namespace:
                    description: |-
                      Namespace is the namespace of resource being referenced
                      Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                      (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                    type: string
                required:
                - kind
                - name
                type: object
                x-kubernetes-validations:
                - message: TargetClusterProfile is immutable
                  rule: self == oldSelf
            required:
            - serviceAccountName
            - serviceAccountNamespace
            - targetClusterProfile
            type: object
          status:
            description: Status is the observed state of the InternalAuthTokenRequest.
            properties:
              conditions:
                description: Conditions is an array of conditions for the authentication
                  token request.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              tokenResponse:
                description: TokenResponse is the issued authentication token.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
